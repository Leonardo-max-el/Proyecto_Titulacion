# Generated by Django 5.1.6 on 2025-03-28 17:13

import app_titulacion.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DocumentoEstudiante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modalidad', models.CharField(choices=[('modalidad_1', 'Modalidad 1'), ('modalidad_2', 'Modalidad 2')], max_length=20)),
                ('carrera', models.CharField(choices=[('Derecho', 'Derecho'), ('Ing. Sistemas', 'Ing. Sistemas'), ('Agronomía', 'Agronomía'), ('Veterinaria', 'Veterinaria')], default='Derecho', max_length=50)),
                ('estado_carrera', models.CharField(choices=[('pendiente', 'Pendiente'), ('aprobado', 'Aprobado'), ('corregir', 'Requiere Corrección')], default='pendiente', max_length=10)),
                ('dni_1', models.FileField(blank=True, null=True, upload_to=app_titulacion.models.estudiante_directory_path)),
                ('estado_dni_1', models.CharField(choices=[('pendiente', 'Pendiente'), ('aprobado', 'Aprobado'), ('corregir', 'Requiere Corrección')], default='pendiente', max_length=10)),
                ('dni_2', models.FileField(blank=True, null=True, upload_to=app_titulacion.models.estudiante_directory_path)),
                ('estado_dni_2', models.CharField(choices=[('pendiente', 'Pendiente'), ('aprobado', 'Aprobado'), ('corregir', 'Requiere Corrección')], default='pendiente', max_length=10)),
                ('tesis', models.FileField(blank=True, null=True, upload_to=app_titulacion.models.estudiante_directory_path)),
                ('estado_tesis', models.CharField(choices=[('pendiente', 'Pendiente'), ('aprobado', 'Aprobado'), ('corregir', 'Requiere Corrección')], default='pendiente', max_length=10)),
                ('declaracion_jurada', models.FileField(blank=True, null=True, upload_to=app_titulacion.models.estudiante_directory_path)),
                ('estado_declaracion_jurada', models.CharField(choices=[('pendiente', 'Pendiente'), ('aprobado', 'Aprobado'), ('corregir', 'Requiere Corrección')], default='pendiente', max_length=10)),
                ('copia_bachiller_1', models.FileField(blank=True, default='', null=True, upload_to=app_titulacion.models.estudiante_directory_path)),
                ('estado_copia_bachiller_1', models.CharField(choices=[('pendiente', 'Pendiente'), ('aprobado', 'Aprobado'), ('corregir', 'Requiere Corrección')], default='pendiente', max_length=10)),
                ('copia_bachiller_2', models.FileField(blank=True, null=True, upload_to=app_titulacion.models.estudiante_directory_path)),
                ('estado_copia_bachiller_2', models.CharField(choices=[('pendiente', 'Pendiente'), ('aprobado', 'Aprobado'), ('corregir', 'Requiere Corrección')], default='pendiente', max_length=10)),
                ('boucher_pago_1', models.FileField(blank=True, null=True, upload_to=app_titulacion.models.estudiante_directory_path)),
                ('estado_boucher_pago_1', models.CharField(choices=[('pendiente', 'Pendiente'), ('aprobado', 'Aprobado'), ('corregir', 'Requiere Corrección')], default='pendiente', max_length=10)),
                ('boucher_pago_2', models.FileField(blank=True, null=True, upload_to=app_titulacion.models.estudiante_directory_path)),
                ('estado_boucher_pago_2', models.CharField(choices=[('pendiente', 'Pendiente'), ('aprobado', 'Aprobado'), ('corregir', 'Requiere Corrección')], default='pendiente', max_length=10)),
                ('solicitud_1', models.FileField(blank=True, null=True, upload_to=app_titulacion.models.estudiante_directory_path)),
                ('estado_solicitud_1', models.CharField(choices=[('pendiente', 'Pendiente'), ('aprobado', 'Aprobado'), ('corregir', 'Requiere Corrección')], default='pendiente', max_length=10)),
                ('solicitud_2', models.FileField(blank=True, null=True, upload_to=app_titulacion.models.estudiante_directory_path)),
                ('estado_solicitud_2', models.CharField(choices=[('pendiente', 'Pendiente'), ('aprobado', 'Aprobado'), ('corregir', 'Requiere Corrección')], default='pendiente', max_length=10)),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombres', models.CharField(default='', max_length=100)),
                ('apellido_paterno', models.CharField(default='', max_length=100)),
                ('apellido_materno', models.CharField(default='', max_length=100)),
                ('escuela_profesional', models.CharField(choices=[('Derecho', 'Derecho'), ('Ing. Sistemas', 'Ing. Sistemas'), ('Agronomía', 'Agronomía'), ('Veterinaria', 'Veterinaria')], default='Derecho', max_length=50)),
                ('direccion', models.CharField(default='', max_length=200)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telefono', models.CharField(default='', max_length=9, validators=[django.core.validators.RegexValidator(message='Teléfono debe contener 9 dígitos', regex='^\\d{9}$')])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
